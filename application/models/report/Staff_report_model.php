<?php
/**
 * Created by PhpStorm.
 * User: chenzhenxing
 * Date: 2017/2/14
 * Time: 16:27
 */
class Staff_report_model extends CI_Model
{

    public function __construct()
    {
        parent::__construct();
    }

    //daily
    public function staff_period_daily_daysort_report($storeWhere, $query_startdate, $query_enddate,$staff_number)
    {
        $sql = "SELECT DATE_FORMAT(time, '%Y-%m-%d') AS storeNameOrTime,storename, sum(`cash_max_performance`) AS cash_max_performance, sum(`cash_max_commission`) AS cash_max_commission, sum(`cash_min_performance`) AS cash_min_performance, sum(`cash_min_commission`) AS cash_min_commission, sum(`cash_product_performance`) AS cash_product_performance, sum(`cash_product_commission`) AS cash_product_commission, sum(`mem_max_performance`) AS mem_max_performance, sum(`mem_max_commission`) AS mem_max_commission, sum(`mem_min_performance`) AS mem_min_performance, sum(`mem_min_commission`) AS mem_min_commission, sum(`mem_product_performance`) AS mem_product_performance, sum(`mem_product_commission`) AS mem_product_commission, sum(`card_performance`) AS card_performance, sum(`card_commission`) AS card_commission, sum(`coupon_performance`) AS coupon_performance, sum(`coupon_commission`) AS coupon_commission, sum(`cash_performance`) AS cash_performance, sum(`server_performance`) AS server_performance, sum(`total_income`) AS total_income,sum(card_untread) as card_untread, sum(handmade) as handmade,sum(card_untread_performance) as card_untread_performance,sum(`course_performance`) as course_performance, sum(`course_commission`) as course_commission,sum(`manager_performance`) as manager_performance, sum(`manager_commission`) as manager_commission FROM rm_staff_salary_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY DATE_FORMAT(time, '%Y-%m-%d'),storeid,storename ORDER BY DATE_FORMAT(time, '%Y-%m-%d');";
        $whileArray = array($query_startdate,  $query_enddate);

        if(isset($staff_number) && count($staff_number)>0 && !empty($staff_number)){
            $sql = "SELECT bonus_time AS storeNameOrTime, ( SELECT STORENAME FROM bm_store ste WHERE ste.STOREID = b.store_id LIMIT 0, 1 ) AS storename, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 8 AND b.pay_type IN (2, 3, 4, 5, 7) THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS cash_max_performance, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 8 AND b.pay_type IN (2, 3, 4, 5, 7) THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS cash_max_commission, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 0 AND b.pay_type IN (2, 3, 4, 5, 7) THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS cash_min_performance, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 0 AND b.pay_type IN (2, 3, 4, 5, 7) THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS cash_min_commission, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 1 AND b.pay_type IN (2, 3, 4, 5, 7) THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS cash_product_performance, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 1 AND b.pay_type IN (2, 3, 4, 5, 7) THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS cash_product_commission, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 8 AND b.pay_type IN (1, 6, 9) THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS mem_max_performance, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 8 AND b.pay_type IN (1, 6, 9) THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS mem_max_commission, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 0 AND b.pay_type IN (1, 6, 9) THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS mem_min_performance, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 0 AND b.pay_type IN (1, 6, 9) THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS mem_min_commission, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 1 AND b.pay_type IN (1, 6, 9) THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS mem_product_performance, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 1 AND b.pay_type IN (1, 6, 9) THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS mem_product_commission, sum( CASE WHEN b.deduct_type = 1 AND  b.deduct_detailtype <> 7 THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS card_performance, sum( CASE WHEN b.deduct_type = 1  AND  b.deduct_detailtype <> 7 THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS card_commission, 0 AS coupon_performance, 0 AS coupon_commission, 0 AS cash_performance, 0 AS server_performance, 0 AS total_incomesum,( CASE WHEN b.deduct_type = 1 AND b.deduct_detailtype = 7 THEN  IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS card_untread, sum( CASE WHEN b.deduct_type = 1 AND b.deduct_detailtype = 7 THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS card_untread_performance,sum(CASE WHEN  b.deduct_type=0 AND b.pay_type =6 THEN (IFNULL(b.staff_performance,0.00)) ELSE 0 end) as course_performance,sum(CASE WHEN  b.deduct_type=0 AND b.pay_type =6 THEN (IFNULL(b.commission_amount,0.00)) ELSE 0 end) as course_commission,sum(CASE WHEN  b.deduct_type=0 AND b.pay_type =8 THEN (IFNULL(b.staff_performance,0.00)) ELSE 0 end) as manager_performance,sum(CASE WHEN  b.deduct_type=0 AND b.pay_type =8 THEN (IFNULL(b.commission_amount,0.00)) ELSE 0 end) as manager_commission   FROM fn_bonus b WHERE pay_type > 0 AND staff_id IN ( SELECT STAFFID FROM sm_staff WHERE STAFFID = ? OR STAFFNUMBER = ? ) and store_id in ".$storeWhere."  AND DATE_FORMAT(bonus_time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(bonus_time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY b.bonus_time,b.deduct_type,b.deduct_detailtype,b.commission_amount,store_id";
            $whileArray = array($staff_number,$staff_number,$query_startdate,  $query_enddate,);
        }
        $query = $this->db->query($sql,$whileArray);
        return $query->result();
    }

    public function staff_period_daily_storesort_report($storeWhere, $query_startdate, $query_enddate,$staff_number)
    {
        $sql = "SELECT concat(IFNULL(staff_number,''),'-',IFNULL(staff_name,''))  AS storeNameOrTime,storename, sum(`cash_max_performance`) AS cash_max_performance, sum(`cash_max_commission`) AS cash_max_commission, sum(`cash_min_performance`) AS cash_min_performance, sum(`cash_min_commission`) AS cash_min_commission, sum(`cash_product_performance`) AS cash_product_performance, sum(`cash_product_commission`) AS cash_product_commission, sum(`mem_max_performance`) AS mem_max_performance, sum(`mem_max_commission`) AS mem_max_commission, sum(`mem_min_performance`) AS mem_min_performance, sum(`mem_min_commission`) AS mem_min_commission, sum(`mem_product_performance`) AS mem_product_performance, sum(`mem_product_commission`) AS mem_product_commission, sum(`card_performance`) AS card_performance, sum(`card_commission`) AS card_commission, sum(`coupon_performance`) AS coupon_performance, sum(`coupon_commission`) AS coupon_commission, sum(`cash_performance`) AS cash_performance, sum(`server_performance`) AS server_performance, sum(`total_income`) AS total_income,sum(card_untread) as card_untread, sum(handmade) as handmade,sum(card_untread_performance) as card_untread_performance,sum(`course_performance`) as course_performance, sum(`course_commission`) as course_commission,sum(`manager_performance`) as manager_performance, sum(`manager_commission`) as manager_commission   FROM rm_staff_salary_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY staff_number,staff_name,storeid,storename ORDER BY staff_name;";
        $whileArray = array($query_startdate,  $query_enddate);

        if(isset($staff_number) && count($staff_number)>0 && !empty($staff_number)){
            $sql = "SELECT  (SELECT concat(IFNULL(STAFFNUMBER,''),'-',IFNULL(STAFFNAME,'')) FROM sm_staff WHERE STAFFID=b.staff_id LIMIT 0,1) AS storeNameOrTime,(SELECT	STORENAME FROM bm_store WHERE STOREID = b.store_id LIMIT 0,1) AS storename, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 8 AND b.pay_type IN (2, 3, 4, 5, 7) THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS cash_max_performance, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 8 AND b.pay_type IN (2, 3, 4, 5, 7) THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS cash_max_commission, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 0 AND b.pay_type IN (2, 3, 4, 5, 7) THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS cash_min_performance, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 0 AND b.pay_type IN (2, 3, 4, 5, 7) THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS cash_min_commission, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 1 AND b.pay_type IN (2, 3, 4, 5, 7) THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS cash_product_performance, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 1 AND b.pay_type IN (2, 3, 4, 5, 7) THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS cash_product_commission, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 8 AND b.pay_type IN (1, 6, 9) THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS mem_max_performance, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 8 AND b.pay_type IN (1, 6, 9) THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS mem_max_commission, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 0 AND b.pay_type IN (1, 6, 9) THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS mem_min_performance, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 0 AND b.pay_type IN (1, 6, 9) THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS mem_min_commission, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 1 AND b.pay_type IN (1, 6, 9) THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS mem_product_performance, sum( CASE WHEN b.deduct_type = 0 AND b.deduct_detailtype = 1 AND b.pay_type IN (1, 6, 9) THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS mem_product_commission, sum( CASE WHEN b.deduct_type = 1 AND  b.deduct_detailtype <> 7 THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS card_performance, sum( CASE WHEN b.deduct_type = 1  AND  b.deduct_detailtype <> 7 THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS card_commission, 0 AS coupon_performance, 0 AS coupon_commission, 0 AS cash_performance, 0 AS server_performance, 0 AS total_income,( CASE WHEN b.deduct_type = 1 AND b.deduct_detailtype = 7 THEN IFNULL(b.commission_amount, 0.00) ELSE 0 END ) AS card_untread, sum( CASE WHEN b.deduct_type = 1 AND b.deduct_detailtype = 7 THEN IFNULL(b.staff_performance, 0.00) ELSE 0 END ) AS card_untread_performance,sum(CASE WHEN  b.deduct_type=0 AND b.pay_type =6 THEN (IFNULL(b.staff_performance,0.00)) ELSE 0 end) as course_performance,sum(CASE WHEN  b.deduct_type=0 AND b.pay_type =6 THEN (IFNULL(b.commission_amount,0.00)) ELSE 0 end) as course_commission,sum(CASE WHEN  b.deduct_type=0 AND b.pay_type =8 THEN (IFNULL(b.staff_performance,0.00)) ELSE 0 end) as manager_performance,sum(CASE WHEN  b.deduct_type=0 AND b.pay_type =8 THEN (IFNULL(b.commission_amount,0.00)) ELSE 0 end) as manager_commission  FROM fn_bonus b WHERE pay_type > 0 AND staff_id IN ( SELECT STAFFID FROM sm_staff WHERE STAFFID = ? OR STAFFNUMBER = ? ) and store_id in ".$storeWhere."  AND DATE_FORMAT(bonus_time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(bonus_time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY b.bonus_time,b.deduct_type,b.deduct_detailtype,b.commission_amount,store_id;";
            $whileArray = array($staff_number,$staff_number,$query_startdate,  $query_enddate,);
        }
        $query = $this->db->query($sql, $whileArray);
        return $query->result();
    }

    //month
    public function staff_period_month_daysort_report($storeWhere, $query_startdate, $query_enddate,$staff_number)
    {
        $sql = "SELECT DATE_FORMAT(time, '%Y-%m') AS storeNameOrTime,storename, sum(`cash_max_performance`) AS cash_max_performance, sum(`cash_max_commission`) AS cash_max_commission, sum(`cash_min_performance`) AS cash_min_performance, sum(`cash_min_commission`) AS cash_min_commission, sum(`cash_product_performance`) AS cash_product_performance, sum(`cash_product_commission`) AS cash_product_commission, sum(`mem_max_performance`) AS mem_max_performance, sum(`mem_max_commission`) AS mem_max_commission, sum(`mem_min_performance`) AS mem_min_performance, sum(`mem_min_commission`) AS mem_min_commission, sum(`mem_product_performance`) AS mem_product_performance, sum(`mem_product_commission`) AS mem_product_commission, sum(`card_performance`) AS card_performance, sum(`card_commission`) AS card_commission, sum(`coupon_performance`) AS coupon_performance, sum(`coupon_commission`) AS coupon_commission, sum(`cash_performance`) AS cash_performance, sum(`server_performance`) AS server_performance, sum(`total_income`) AS total_income,sum(card_untread) as card_untread, sum(handmade) as handmade,sum(card_untread_performance) as card_untread_performance,sum(`course_performance`) as course_performance, sum(`course_commission`) as course_commission,sum(`manager_performance`) as manager_performance, sum(`manager_commission`) as manager_commission   FROM rm_staff_salary_month WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m') >= DATE_FORMAT(?, '%Y-%m') AND DATE_FORMAT(time, '%Y-%m') <= DATE_FORMAT(?, '%Y-%m') GROUP BY DATE_FORMAT(time, '%Y-%m'),storeid,storename ORDER BY DATE_FORMAT(time, '%Y-%m');";
        $whileArray = array($query_startdate,  $query_enddate);

        if(isset($staff_number) && count($staff_number)>0 && !empty($staff_number)){
            //$sql = "SELECT DATE_FORMAT(time, '%Y-%m-%d') AS storeNameOrTime,storename, `cash_max_performance` AS cash_max_performance, `cash_max_commission` AS cash_max_commission, `cash_min_performance` AS cash_min_performance, `cash_min_commission` AS cash_min_commission, `cash_product_performance` AS cash_product_performance, `cash_product_commission` AS cash_product_commission, `mem_max_performance` AS mem_max_performance, `mem_max_commission` AS mem_max_commission, `mem_min_performance` AS mem_min_performance, `mem_min_commission` AS mem_min_commission, `mem_product_performance` AS mem_product_performance, `mem_product_commission` AS mem_product_commission, `card_performance` AS card_performance, `card_commission` AS card_commission, `coupon_performance` AS coupon_performance, `coupon_commission` AS coupon_commission, `cash_performance` AS cash_performance, `server_performance` AS server_performance, `total_income` AS total_income,sum(card_untread) as card_untread, sum(handmade) as handmade,sum(card_untread_performance) as card_untread_performance FROM rm_staff_salary_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') AND staff_number=? ORDER BY DATE_FORMAT(time, '%Y-%m-%d');";
            $sql = "SELECT DATE_FORMAT(time, '%Y-%m-%d') AS storeNameOrTime,storename, (`cash_max_performance`) AS cash_max_performance, (`cash_max_commission`) AS cash_max_commission, (`cash_min_performance`) AS cash_min_performance, (`cash_min_commission`) AS cash_min_commission, (`cash_product_performance`) AS cash_product_performance, (`cash_product_commission`) AS cash_product_commission, (`mem_max_performance`) AS mem_max_performance, (`mem_max_commission`) AS mem_max_commission, (`mem_min_performance`) AS mem_min_performance, (`mem_min_commission`) AS mem_min_commission, (`mem_product_performance`) AS mem_product_performance, (`mem_product_commission`) AS mem_product_commission, (`card_performance`) AS card_performance, (`card_commission`) AS card_commission, (`coupon_performance`) AS coupon_performance, (`coupon_commission`) AS coupon_commission, (`cash_performance`) AS cash_performance, (`server_performance`) AS server_performance, (`total_income`) AS total_income,(card_untread) as card_untread, (handmade) as handmade,(card_untread_performance) as card_untread_performance,sum(`course_performance`) as course_performance, sum(`course_commission`) as course_commission,sum(`manager_performance`) as manager_performance, sum(`manager_commission`) as manager_commission   FROM rm_staff_salary_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m') >= DATE_FORMAT(?, '%Y-%m') AND DATE_FORMAT(time, '%Y-%m') <= DATE_FORMAT(?, '%Y-%m') AND staff_number=?";
            $whileArray = array($query_startdate,  $query_enddate,$staff_number);
        }
        $query = $this->db->query($sql,$whileArray);
        //echo $this->db->last_query();
        return $query->result();
    }

    public function staff_period_month_storesort_report($storeWhere, $query_startdate, $query_enddate,$staff_number)
    {
        $sql = "SELECT concat(IFNULL(staff_number,''),'-',IFNULL(staff_name,''))  AS storeNameOrTime,storename, sum(`cash_max_performance`) AS cash_max_performance, sum(`cash_max_commission`) AS cash_max_commission, sum(`cash_min_performance`) AS cash_min_performance, sum(`cash_min_commission`) AS cash_min_commission, sum(`cash_product_performance`) AS cash_product_performance, sum(`cash_product_commission`) AS cash_product_commission, sum(`mem_max_performance`) AS mem_max_performance, sum(`mem_max_commission`) AS mem_max_commission, sum(`mem_min_performance`) AS mem_min_performance, sum(`mem_min_commission`) AS mem_min_commission, sum(`mem_product_performance`) AS mem_product_performance, sum(`mem_product_commission`) AS mem_product_commission, sum(`card_performance`) AS card_performance, sum(`card_commission`) AS card_commission, sum(`coupon_performance`) AS coupon_performance, sum(`coupon_commission`) AS coupon_commission, sum(`cash_performance`) AS cash_performance, sum(`server_performance`) AS server_performance, sum(`total_income`) AS total_income,sum(card_untread) as card_untread, sum(handmade) as handmade,sum(card_untread_performance) as card_untread_performance,sum(`course_performance`) as course_performance, sum(`course_commission`) as course_commission,sum(`manager_performance`) as manager_performance, sum(`manager_commission`) as manager_commission   FROM rm_staff_salary_month WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m') >= DATE_FORMAT(?, '%Y-%m') AND DATE_FORMAT(time, '%Y-%m') <= DATE_FORMAT(?, '%Y-%m') GROUP BY staff_number,staff_name,storeid,storename ORDER BY staff_name;";
        $whileArray = array($query_startdate,  $query_enddate);

        if(isset($staff_number) && count($staff_number)>0 && !empty($staff_number)){
            //$sql = "SELECT concat(IFNULL(staff_number,''),'-',IFNULL(staff_name,''))  AS storeNameOrTime,storename, `cash_max_performance` AS cash_max_performance, `cash_max_commission` AS cash_max_commission, `cash_min_performance` AS cash_min_performance, `cash_min_commission` AS cash_min_commission, `cash_product_performance` AS cash_product_performance, `cash_product_commission` AS cash_product_commission, `mem_max_performance` AS mem_max_performance, `mem_max_commission` AS mem_max_commission, `mem_min_performance` AS mem_min_performance, `mem_min_commission` AS mem_min_commission, `mem_product_performance` AS mem_product_performance, `mem_product_commission` AS mem_product_commission, `card_performance` AS card_performance, `card_commission` AS card_commission, `coupon_performance` AS coupon_performance, `coupon_commission` AS coupon_commission, `cash_performance` AS cash_performance, `server_performance` AS server_performance, `total_income` AS total_income,sum(card_untread) as card_untread, sum(handmade) as handmade,sum(card_untread_performance) as card_untread_performance FROM rm_staff_salary_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d')  AND staff_number=?  ORDER BY staff_name;";
            $sql = "SELECT concat(IFNULL(staff_number,''),'-',IFNULL(staff_name,''))  AS storeNameOrTime,storename, (`cash_max_performance`) AS cash_max_performance, (`cash_max_commission`) AS cash_max_commission, (`cash_min_performance`) AS cash_min_performance, (`cash_min_commission`) AS cash_min_commission, (`cash_product_performance`) AS cash_product_performance, (`cash_product_commission`) AS cash_product_commission, (`mem_max_performance`) AS mem_max_performance, (`mem_max_commission`) AS mem_max_commission, (`mem_min_performance`) AS mem_min_performance, (`mem_min_commission`) AS mem_min_commission, (`mem_product_performance`) AS mem_product_performance, (`mem_product_commission`) AS mem_product_commission, (`card_performance`) AS card_performance, (`card_commission`) AS card_commission, (`coupon_performance`) AS coupon_performance, (`coupon_commission`) AS coupon_commission, (`cash_performance`) AS cash_performance, (`server_performance`) AS server_performance, (`total_income`) AS total_income,(card_untread) as card_untread, (handmade) as handmade,(card_untread_performance) as card_untread_performance,sum(`course_performance`) as course_performance, sum(`course_commission`) as course_commission,sum(`manager_performance`) as manager_performance, sum(`manager_commission`) as manager_commission   FROM rm_staff_salary_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m') >= DATE_FORMAT(?, '%Y-%m') AND DATE_FORMAT(time, '%Y-%m') <= DATE_FORMAT(?, '%Y-%m')  AND staff_number=? ";
            $whileArray = array($query_startdate,  $query_enddate,$staff_number);
        }
        $query = $this->db->query($sql, $whileArray);
        //echo $this->db->last_query();
        return $query->result();
    }

    public function  staff_period_detail_report($storeWhere, $query_startdate, $query_enddate,$staff_number){
        if(empty($staff_number)){

            return array();
        }
        //$sql = "SELECT concat(IFNULL(staff_number,''),'-',IFNULL(staff_name,''))  AS storeNameOrTime,storename, `cash_max_performance` AS cash_max_performance, `cash_max_commission` AS cash_max_commission, `cash_min_performance` AS cash_min_performance, `cash_min_commission` AS cash_min_commission, `cash_product_performance` AS cash_product_performance, `cash_product_commission` AS cash_product_commission, `mem_max_performance` AS mem_max_performance, `mem_max_commission` AS mem_max_commission, `mem_min_performance` AS mem_min_performance, `mem_min_commission` AS mem_min_commission, `mem_product_performance` AS mem_product_performance, `mem_product_commission` AS mem_product_commission, `card_performance` AS card_performance, `card_commission` AS card_commission, `coupon_performance` AS coupon_performance, `coupon_commission` AS coupon_commission, `cash_performance` AS cash_performance, `server_performance` AS server_performance, `total_income` AS total_income,sum(card_untread) as card_untread, sum(handmade) as handmade,sum(card_untread_performance) as card_untread_performance FROM rm_staff_salary_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d')  AND staff_number=?  ORDER BY staff_name;";
        $sql = "SELECT b.bonus_time, s.STORENAME, f.STAFFNUMBER, f.STAFFNAME, IFNULL(CONCAT(p.COMPANYITEMNO,'-',p.PRODUCTNAME), c.CARDNAME) AS productname, IFNULL( b.order_number, b.card_number ) AS card_orderid, b.bonus_time, b.total_performance, b.performance_ratio, b.performance_amount, b.staff_performance_ratio, b.staff_performance, b.staff_performance_ratio, b.staff_performance, b.commission_ratio, commission_amount,m.PAYNAME as payname FROM fn_bonus b LEFT JOIN bm_store s ON b.store_id = s.STOREID LEFT JOIN sm_staff f ON b.staff_id = f.STAFFID LEFT JOIN bm_product p ON b.product_id = p.PRODUCTID LEFT JOIN bm_card c ON b.card_id = c.CARDID LEFT JOIN bm_payment m ON b.pay_type = m.PAYID WHERE  b.store_id IN ".$storeWhere." AND DATE_FORMAT(bonus_time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(bonus_time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d')  AND  b.staff_id IN ( SELECT STAFFID FROM sm_staff WHERE STAFFNUMBER=? or STAFFID=? )";
        $whileArray = array($query_startdate,  $query_enddate,$staff_number,$staff_number);

        $query = $this->db->query($sql, $whileArray);
        return $query->result();
    }
}
?>