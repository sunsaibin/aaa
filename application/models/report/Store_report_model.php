<?php
class Store_report_model extends CI_Model {

    public function __construct()
    {
        parent::__construct();
        //$this->db = $this->load->database('default', TRUE);
    }

    //daily
    public function store_period_daily_daysort_report($storeWhere, $query_startdate, $query_enddate)
    {
        $sql = "SELECT DATE_FORMAT(time, '%Y-%m-%d') AS storeNameOrTime, sum(cash_server_money) AS cash_server_money, sum(cash_server_money_count) AS cash_server_money_count, sum(cash_product_money) AS cash_product_money, sum(cash_product_money_count) AS cash_product_money_count, sum(cash_changes_money) AS cash_changes_money, sum(cash_changes_money_count) AS cash_changes_money_count, sum(cash_cancel_money) AS cash_cancel_money, sum(cash_cancel_money_count) AS cash_cancel_money_count, sum(cash_total_money) AS cash_total_money, sum(unionpay_server_money) AS unionpay_server_money, sum(unionpay_product__money) AS unionpay_product__money, sum(unionpay_changes_money) AS unionpay_changes_money, sum(unionpay_cancel_money) AS unionpay_cancel_money, sum(unionpay_total_money) AS unionpay_total_money, sum(alipay_server_money) AS alipay_server_money, sum(alipay_produc_money) AS alipay_produc_money, sum(alipay_changes_money) AS alipay_changes_money, sum(alipay_cancel_money) AS alipay_cancel_money, sum(alipay_total_money) AS alipay_total_money, sum(weixin_server_money) AS weixin_server_money, sum(weixin_product_money) AS weixin_product_money, sum(weixin_changes_money) AS weixin_changes_money, sum(weixin_cancel_money) AS weixin_cancel_money, sum(weixin_total_money) AS weixin_total_money, sum(card_cancel_money) AS card_cancel_money, sum(card_server_money) AS card_server_money, sum(card_product_money) AS card_product_money, sum(card_total_money) AS card_total_money, sum(card_course_server_money) AS card_course_server_money, sum( third_dianping_server_money ) AS third_dianping_server_money, sum(third_total_money) AS third_total_money, sum(card_count) AS card_count, sum(transfer_changes_money) AS transfer_changes_money, sum(transfer_cancel_money) AS transfer_cancel_money, sum(transfer_total_money) AS transfer_total_money, sum(order_count) AS order_count, sum(coupon_server_money) AS coupon_server_money, sum(coupon_product_money) AS coupon_product_money, sum(coupon_total_money) AS coupon_total_money, sum(count_coupon) AS count_coupon, sum(cosmetic_cash) AS cosmetic_cash, sum(hairdress_cash) AS hairdress_cash, sum(cosmetic_server) AS cosmetic_server, sum(hairdress_server) AS hairdress_server, sum(cosmetic_card) AS cosmetic_card, sum(hairdress_card) AS hairdress_card, sum(total_cash) AS total_cash, sum(total_server) AS total_server, sum(total_card) AS total_card, sum(total_product) AS total_product, sum(total_sale_card) AS total_sale_card, sum(manager_bill) AS manager_bill, sum(expend_record) AS expend_record,sum(cash_salecard_money) as cash_salecard_money,sum(unionpay_salecard_money) as unionpay_salecard_money,sum(alipay_salecard_money) as alipay_salecard_money,sum(weixin_salecard_money) as weixin_salecard_money FROM rm_store_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY DATE_FORMAT(time, '%Y-%m-%d') ORDER BY DATE_FORMAT(time, '%Y-%m-%d');";
        $query = $this->db->query($sql, array($query_startdate,  $query_enddate));
        //echo $this->db->last_query();
        return $query->result();
    }

    public function store_period_daily_storesort_report($storeWhere, $query_startdate, $query_enddate)
    {
        $sql = "SELECT storeid AS storeid, concat(IFNULL(storenumber,''),'-',IFNULL(storename,'')) AS storeNameOrTime, sum(cash_server_money) AS cash_server_money, sum(cash_server_money_count) AS cash_server_money_count, sum(cash_product_money) AS cash_product_money, sum(cash_product_money_count) AS cash_product_money_count, sum(cash_changes_money) AS cash_changes_money, sum(cash_changes_money_count) AS cash_changes_money_count, sum(cash_cancel_money) AS cash_cancel_money, sum(cash_cancel_money_count) AS cash_cancel_money_count, sum(cash_total_money) AS cash_total_money, sum(unionpay_server_money) AS unionpay_server_money, sum(unionpay_product__money) AS unionpay_product__money, sum(unionpay_changes_money) AS unionpay_changes_money, sum(unionpay_cancel_money) AS unionpay_cancel_money, sum(unionpay_total_money) AS unionpay_total_money, sum(alipay_server_money) AS alipay_server_money, sum(alipay_produc_money) AS alipay_produc_money, sum(alipay_changes_money) AS alipay_changes_money, sum(alipay_cancel_money) AS alipay_cancel_money, sum(alipay_total_money) AS alipay_total_money, sum(weixin_server_money) AS weixin_server_money, sum(weixin_product_money) AS weixin_product_money, sum(weixin_changes_money) AS weixin_changes_money, sum(weixin_cancel_money) AS weixin_cancel_money, sum(weixin_total_money) AS weixin_total_money, sum(card_cancel_money) AS card_cancel_money, sum(card_server_money) AS card_server_money, sum(card_product_money) AS card_product_money, sum(card_total_money) AS card_total_money, sum(card_course_server_money) AS card_course_server_money, sum( third_dianping_server_money ) AS third_dianping_server_money, sum(third_total_money) AS third_total_money, sum(card_count) AS card_count, sum(transfer_changes_money) AS transfer_changes_money, sum(transfer_cancel_money) AS transfer_cancel_money, sum(transfer_total_money) AS transfer_total_money, sum(order_count) AS order_count, sum(coupon_server_money) AS coupon_server_money, sum(coupon_product_money) AS coupon_product_money, sum(coupon_total_money) AS coupon_total_money, sum(count_coupon) AS count_coupon, sum(cosmetic_cash) AS cosmetic_cash, sum(hairdress_cash) AS hairdress_cash, sum(cosmetic_server) AS cosmetic_server, sum(hairdress_server) AS hairdress_server, sum(cosmetic_card) AS cosmetic_card, sum(hairdress_card) AS hairdress_card, sum(total_cash) AS total_cash, sum(total_server) AS total_server, sum(total_card) AS total_card, sum(total_product) AS total_product, sum(total_sale_card) AS total_sale_card, sum(manager_bill) AS manager_bill, sum(expend_record) AS expend_record,sum(cash_salecard_money) as cash_salecard_money,sum(unionpay_salecard_money) as unionpay_salecard_money,sum(alipay_salecard_money) as alipay_salecard_money,sum(weixin_salecard_money) as weixin_salecard_money FROM rm_store_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY storeid, storename,storenumber";
        $query = $this->db->query($sql, array($query_startdate,  $query_enddate));
        //echo $this->db->last_query();concat(storenumber,'-',storename)
        return $query->result();
    }


    // month
    public function store_period_month_daysort_report($storeWhere, $query_startdate,$query_enddate)
    {
        $sql = "SELECT DATE_FORMAT(time, '%Y-%m') AS storeNameOrTime, sum(cash_server_money) AS cash_server_money, sum(cash_server_money_count) AS cash_server_money_count, sum(cash_product_money) AS cash_product_money, sum(cash_product_money_count) AS cash_product_money_count, sum(cash_changes_money) AS cash_changes_money, sum(cash_changes_money_count) AS cash_changes_money_count, sum(cash_cancel_money) AS cash_cancel_money, sum(cash_cancel_money_count) AS cash_cancel_money_count, sum(cash_total_money) AS cash_total_money, sum(unionpay_server_money) AS unionpay_server_money, sum(unionpay_product__money) AS unionpay_product__money, sum(unionpay_changes_money) AS unionpay_changes_money, sum(unionpay_cancel_money) AS unionpay_cancel_money, sum(unionpay_total_money) AS unionpay_total_money, sum(alipay_server_money) AS alipay_server_money, sum(alipay_produc_money) AS alipay_produc_money, sum(alipay_changes_money) AS alipay_changes_money, sum(alipay_cancel_money) AS alipay_cancel_money, sum(alipay_total_money) AS alipay_total_money, sum(weixin_server_money) AS weixin_server_money, sum(weixin_product_money) AS weixin_product_money, sum(weixin_changes_money) AS weixin_changes_money, sum(weixin_cancel_money) AS weixin_cancel_money, sum(weixin_total_money) AS weixin_total_money, sum(card_cancel_money) AS card_cancel_money, sum(card_server_money) AS card_server_money, sum(card_product_money) AS card_product_money, sum(card_total_money) AS card_total_money, sum(card_course_server_money) AS card_course_server_money, sum( third_dianping_server_money ) AS third_dianping_server_money, sum(third_total_money) AS third_total_money, sum(card_count) AS card_count, sum(transfer_changes_money) AS transfer_changes_money, sum(transfer_cancel_money) AS transfer_cancel_money, sum(transfer_total_money) AS transfer_total_money, sum(order_count) AS order_count, sum(coupon_server_money) AS coupon_server_money, sum(coupon_product_money) AS coupon_product_money, sum(coupon_total_money) AS coupon_total_money, sum(count_coupon) AS count_coupon, sum(cosmetic_cash) AS cosmetic_cash, sum(hairdress_cash) AS hairdress_cash, sum(cosmetic_server) AS cosmetic_server, sum(hairdress_server) AS hairdress_server, sum(cosmetic_card) AS cosmetic_card, sum(hairdress_card) AS hairdress_card, sum(total_cash) AS total_cash, sum(total_server) AS total_server, sum(total_card) AS total_card, sum(total_product) AS total_product, sum(total_sale_card) AS total_sale_card, sum(manager_bill) AS manager_bill, sum(expend_record) AS expend_record,sum(cash_salecard_money) as cash_salecard_money,sum(unionpay_salecard_money) as unionpay_salecard_money,sum(alipay_salecard_money) as alipay_salecard_money,sum(weixin_salecard_money) as weixin_salecard_money FROM rm_store_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m') >= DATE_FORMAT(?, '%Y-%m')  AND DATE_FORMAT(time, '%Y-%m') <= DATE_FORMAT(?, '%Y-%m') GROUP BY DATE_FORMAT(time, '%Y-%m') ORDER BY DATE_FORMAT(time, '%Y-%m');";
        $query = $this->db->query($sql, array($query_startdate,$query_enddate));
        //echo $this->db->last_query();
        return $query->result();
    }

    public function store_period_month_storesort_report($storeWhere, $query_startdate,$query_enddate)
    {
        $sql = "SELECT storeid AS storeid, concat(IFNULL(storenumber,''),'-',IFNULL(storename,'')) AS storeNameOrTime, sum(cash_server_money) AS cash_server_money, sum(cash_server_money_count) AS cash_server_money_count, sum(cash_product_money) AS cash_product_money, sum(cash_product_money_count) AS cash_product_money_count, sum(cash_changes_money) AS cash_changes_money, sum(cash_changes_money_count) AS cash_changes_money_count, sum(cash_cancel_money) AS cash_cancel_money, sum(cash_cancel_money_count) AS cash_cancel_money_count, sum(cash_total_money) AS cash_total_money, sum(unionpay_server_money) AS unionpay_server_money, sum(unionpay_product__money) AS unionpay_product__money, sum(unionpay_changes_money) AS unionpay_changes_money, sum(unionpay_cancel_money) AS unionpay_cancel_money, sum(unionpay_total_money) AS unionpay_total_money, sum(alipay_server_money) AS alipay_server_money, sum(alipay_produc_money) AS alipay_produc_money, sum(alipay_changes_money) AS alipay_changes_money, sum(alipay_cancel_money) AS alipay_cancel_money, sum(alipay_total_money) AS alipay_total_money, sum(weixin_server_money) AS weixin_server_money, sum(weixin_product_money) AS weixin_product_money, sum(weixin_changes_money) AS weixin_changes_money, sum(weixin_cancel_money) AS weixin_cancel_money, sum(weixin_total_money) AS weixin_total_money, sum(card_cancel_money) AS card_cancel_money, sum(card_server_money) AS card_server_money, sum(card_product_money) AS card_product_money, sum(card_total_money) AS card_total_money, sum(card_course_server_money) AS card_course_server_money, sum( third_dianping_server_money ) AS third_dianping_server_money, sum(third_total_money) AS third_total_money, sum(card_count) AS card_count, sum(transfer_changes_money) AS transfer_changes_money, sum(transfer_cancel_money) AS transfer_cancel_money, sum(transfer_total_money) AS transfer_total_money, sum(order_count) AS order_count, sum(coupon_server_money) AS coupon_server_money, sum(coupon_product_money) AS coupon_product_money, sum(coupon_total_money) AS coupon_total_money, sum(count_coupon) AS count_coupon, sum(cosmetic_cash) AS cosmetic_cash, sum(hairdress_cash) AS hairdress_cash, sum(cosmetic_server) AS cosmetic_server, sum(hairdress_server) AS hairdress_server, sum(cosmetic_card) AS cosmetic_card, sum(hairdress_card) AS hairdress_card, sum(total_cash) AS total_cash, sum(total_server) AS total_server, sum(total_card) AS total_card, sum(total_product) AS total_product, sum(total_sale_card) AS total_sale_card, sum(manager_bill) AS manager_bill, sum(expend_record) AS expend_record,sum(cash_salecard_money) as cash_salecard_money,sum(unionpay_salecard_money) as unionpay_salecard_money,sum(alipay_salecard_money) as alipay_salecard_money,sum(weixin_salecard_money) as weixin_salecard_money FROM rm_store_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m') >= DATE_FORMAT(?, '%Y-%m')  AND DATE_FORMAT(time, '%Y-%m') <= DATE_FORMAT(?, '%Y-%m')   GROUP BY storeid, storename,storenumber";
        $query = $this->db->query($sql, array($query_startdate,$query_enddate));
        //echo $this->db->last_query();
        return $query->result();
    }

    //classify
    public function store_period_classify_daysort_report($storeWhere, $query_startdate, $query_enddate)
    {
        // $sql = "SELECT *, DATE_FORMAT(time, '%Y-%m') AS storeNameOrTime FROM rm_store_day WHERE storeid IN ".$storeWhere." and DATE_FORMAT(time,'%Y-%m-%d')>=DATE_FORMAT(?,'%Y-%m-%d') and DATE_FORMAT(time,'%Y-%m-%d')<=DATE_FORMAT(?,'%Y-%m-%d') order by time";
        $sql = "SELECT DATE_FORMAT(time, '%Y-%m-%d') AS storeNameOrTime, sum(cash_server_money) AS cash_server_money, sum(cash_server_money_count) AS cash_server_money_count, sum(cash_product_money) AS cash_product_money, sum(cash_product_money_count) AS cash_product_money_count, sum(cash_changes_money) AS cash_changes_money, sum(cash_changes_money_count) AS cash_changes_money_count, sum(cash_cancel_money) AS cash_cancel_money, sum(cash_cancel_money_count) AS cash_cancel_money_count, sum(cash_total_money) AS cash_total_money, sum(unionpay_server_money) AS unionpay_server_money, sum(unionpay_product__money) AS unionpay_product__money, sum(unionpay_changes_money) AS unionpay_changes_money, sum(unionpay_cancel_money) AS unionpay_cancel_money, sum(unionpay_total_money) AS unionpay_total_money, sum(alipay_server_money) AS alipay_server_money, sum(alipay_produc_money) AS alipay_produc_money, sum(alipay_changes_money) AS alipay_changes_money, sum(alipay_cancel_money) AS alipay_cancel_money, sum(alipay_total_money) AS alipay_total_money, sum(weixin_server_money) AS weixin_server_money, sum(weixin_product_money) AS weixin_product_money, sum(weixin_changes_money) AS weixin_changes_money, sum(weixin_cancel_money) AS weixin_cancel_money, sum(weixin_total_money) AS weixin_total_money, sum(card_cancel_money) AS card_cancel_money, sum(card_server_money) AS card_server_money, sum(card_product_money) AS card_product_money, sum(card_total_money) AS card_total_money, sum(card_course_server_money) AS card_course_server_money, sum( third_dianping_server_money ) AS third_dianping_server_money, sum(third_total_money) AS third_total_money, sum(card_count) AS card_count, sum(transfer_changes_money) AS transfer_changes_money, sum(transfer_cancel_money) AS transfer_cancel_money, sum(transfer_total_money) AS transfer_total_money, sum(order_count) AS order_count, sum(coupon_server_money) AS coupon_server_money, sum(coupon_product_money) AS coupon_product_money, sum(coupon_total_money) AS coupon_total_money, sum(count_coupon) AS count_coupon, sum(cosmetic_cash) AS cosmetic_cash, sum(hairdress_cash) AS hairdress_cash,sum(manicure_cash) as manicure_cash, sum(cosmetic_server) AS cosmetic_server, sum(hairdress_server) AS hairdress_server,sum(manicure_server) as manicure_server, sum(cosmetic_card) AS cosmetic_card, sum(hairdress_card) AS hairdress_card,sum(manicure_card) as manicure_card, sum(total_cash) AS total_cash, sum(total_server) AS total_server, sum(total_card) AS total_card, sum(total_product) AS total_product, sum(total_sale_card) AS total_sale_card, sum(manager_bill) AS manager_bill, sum(expend_record) AS expend_record,sum(cash_salecard_money) as cash_salecard_money,sum(unionpay_salecard_money) as unionpay_salecard_money,sum(alipay_salecard_money) as alipay_salecard_money,sum(weixin_salecard_money) as weixin_salecard_money FROM rm_store_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY DATE_FORMAT(time, '%Y-%m-%d') ORDER BY DATE_FORMAT(time, '%Y-%m-%d');";
        $query = $this->db->query($sql, array($query_startdate,  $query_enddate));
        //echo $this->db->last_query();
        return $query->result();
    }

    public function store_period_classifystoresort_report($storeWhere, $query_startdate, $query_enddate)
    {
        // $sql = "SELECT *,concat(IFNULL(storenumber,''),'-',IFNULL(storename,'')) AS storeNameOrTime  FROM rm_store_day WHERE storeid IN ".$storeWhere." and DATE_FORMAT(time,'%Y-%m-%d')>=DATE_FORMAT(?,'%Y-%m-%d') and DATE_FORMAT(time,'%Y-%m-%d')<=DATE_FORMAT(?,'%Y-%m-%d') order by storeid";
        $sql = "SELECT storeid AS storeid, concat(IFNULL(storenumber,''),'-',IFNULL(storename,'')) AS storeNameOrTime, sum(cash_server_money) AS cash_server_money, sum(cash_server_money_count) AS cash_server_money_count, sum(cash_product_money) AS cash_product_money, sum(cash_product_money_count) AS cash_product_money_count, sum(cash_changes_money) AS cash_changes_money, sum(cash_changes_money_count) AS cash_changes_money_count, sum(cash_cancel_money) AS cash_cancel_money, sum(cash_cancel_money_count) AS cash_cancel_money_count, sum(cash_total_money) AS cash_total_money, sum(unionpay_server_money) AS unionpay_server_money, sum(unionpay_product__money) AS unionpay_product__money, sum(unionpay_changes_money) AS unionpay_changes_money, sum(unionpay_cancel_money) AS unionpay_cancel_money, sum(unionpay_total_money) AS unionpay_total_money, sum(alipay_server_money) AS alipay_server_money, sum(alipay_produc_money) AS alipay_produc_money, sum(alipay_changes_money) AS alipay_changes_money, sum(alipay_cancel_money) AS alipay_cancel_money, sum(alipay_total_money) AS alipay_total_money, sum(weixin_server_money) AS weixin_server_money, sum(weixin_product_money) AS weixin_product_money, sum(weixin_changes_money) AS weixin_changes_money, sum(weixin_cancel_money) AS weixin_cancel_money, sum(weixin_total_money) AS weixin_total_money, sum(card_cancel_money) AS card_cancel_money, sum(card_server_money) AS card_server_money, sum(card_product_money) AS card_product_money, sum(card_total_money) AS card_total_money, sum(card_course_server_money) AS card_course_server_money, sum( third_dianping_server_money ) AS third_dianping_server_money, sum(third_total_money) AS third_total_money, sum(card_count) AS card_count, sum(transfer_changes_money) AS transfer_changes_money, sum(transfer_cancel_money) AS transfer_cancel_money, sum(transfer_total_money) AS transfer_total_money, sum(order_count) AS order_count, sum(coupon_server_money) AS coupon_server_money, sum(coupon_product_money) AS coupon_product_money, sum(coupon_total_money) AS coupon_total_money, sum(count_coupon) AS count_coupon, sum(cosmetic_cash) AS cosmetic_cash, sum(hairdress_cash) AS hairdress_cash,sum(manicure_cash) as manicure_cash, sum(cosmetic_server) AS cosmetic_server, sum(hairdress_server) AS hairdress_server,sum(manicure_server) as manicure_server,sum(manicure_server) as manicure_server, sum(cosmetic_card) AS cosmetic_card, sum(hairdress_card) AS hairdress_card,sum(manicure_card) as manicure_card, sum(total_cash) AS total_cash, sum(total_server) AS total_server, sum(total_card) AS total_card, sum(total_product) AS total_product, sum(total_sale_card) AS total_sale_card, sum(manager_bill) AS manager_bill, sum(expend_record) AS expend_record,sum(cash_salecard_money) as cash_salecard_money,sum(unionpay_salecard_money) as unionpay_salecard_money,sum(alipay_salecard_money) as alipay_salecard_money,sum(weixin_salecard_money) as weixin_salecard_money FROM rm_store_day WHERE storeid IN ".$storeWhere." AND DATE_FORMAT(time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY storeid, storename,storenumber";
        $query = $this->db->query($sql, array($query_startdate,  $query_enddate));
        //echo $this->db->last_query();concat(storenumber,'-',storename)
        return $query->result();
    }

    //purchase
    public function  purchase_card_report_1_0($storeWhere, $query_startdate, $query_enddate){
        //$sql = "SELECT a.store_id, h.STOREID as original_storeid, a.card_num,h.BANLANCE as banlance, SUM(a.amount) as consume, h.BANLANCE-SUM(a.amount) as new_balance,a.card_id as card_id FROM fn_account a LEFT JOIN bm_cardhistory h on a.card_id = h.CARDID  where h.operator_type=5 AND h.STOREID in $storeWhere and AND DATE_FORMAT(a.create_date,'%Y-%m-%d') >= ? and AND DATE_FORMAT(a.create_date,'%Y-%m-%d') <= ? and card_id in (SELECT CARDID FROM bm_cardhistory where operator_type=5) and a.operator_type=2 GROUP BY a.store_id,h.STOREID,a.card_num,h.BANLANCE;";
        //$sql = "SELECT ( SELECT CONCAT( STORESHORTNUM, '-', STORENAME ) FROM bm_store WHERE STOREID = a.store_id ) AS consume_storename, ( SELECT CONCAT( STORESHORTNUM, '-', STORENAME ) FROM bm_store WHERE STOREID = h.STOREID ) AS orgin_storename, a.card_num, h.BANLANCE AS banlance, SUM(a.amount) AS consume, h.BANLANCE - SUM(a.amount) AS new_balance, a.card_id AS card_id, a.store_id AS store_id FROM fn_account a LEFT JOIN bm_cardhistory h ON a.card_id = h.CARDID WHERE h.operator_type = 5  AND h.STOREID in $storeWhere AND DATE_FORMAT(a.create_date, '%Y-%m-%d') >= ? AND DATE_FORMAT(a.create_date, '%Y-%m-%d') <= ? AND card_id IN ( SELECT CARDID FROM bm_cardhistory WHERE operator_type = 5 ) AND a.operator_type = 2 GROUP BY a.store_id, h.STOREID, a.card_num,a.card_id, h.BANLANCE;";
        //$sql = "SELECT ( SELECT CONCAT( STORESHORTNUM, '-', STORENAME ) FROM bm_store WHERE STOREID = h.STOREID ) AS consume_storename, ( SELECT CONCAT( STORESHORTNUM, '-', STORENAME ) FROM bm_store WHERE STOREID = h.STOREID ) AS orgin_storename, h.CARDNUM, h.BANLANCE AS banlance, ( SELECT IFNULL(SUM(real_amount), 0) FROM bm_orderproducts WHERE ORDERID IN ( SELECT ORDERID FROM bm_order WHERE CARDID = h.CARDID )) AS consume, h.BANLANCE AS new_balance, h.CARDID AS card_id, h.STOREID AS store_id,USETIME, create_date FROM bm_cardhistory h WHERE h.operator_type = 5 AND h.STOREID IN ".$storeWhere." AND operator_type = 5 AND DATE_FORMAT(create_date, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(create_date, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d')";
        $sql = "SELECT DATE_FORMAT(purchase_time, '%Y-%m-%d') AS store_date,'--' AS purchase_date, '--' AS card_number,'--' AS card_id, card_balance AS card_balance, SUM((period_start)) AS period_start, sum(period_end) AS period_end, sum(consume) AS consume, sum(card_recharge) AS card_recharge, real_balance AS real_balance,SUM( IF ( c.period_start - c.consume > 0, c.period_start - c.consume, c.period_start )) AS card_amonut1, SUM( c.card_balance - c.period_start ) AS card_amonut2, SUM( IF ( c.period_start - c.consume > 0, c.period_start - c.consume, 0 )) AS card_amonut3, SUM( IF ( c.period_start - c.consume > 0, 0, c.consume - c.period_start )) AS card_amonut4 FROM rm_store_purchase_card c where period_start>0 AND store_id in ".$storeWhere." AND DATE_FORMAT(purchase_time,'%Y-%m-%d')>=DATE_FORMAT(?,'%Y-%m-%d') AND DATE_FORMAT(purchase_time,'%Y-%m-%d')<=DATE_FORMAT(?,'%Y-%m-%d') GROUP BY  DATE_FORMAT(purchase_time, '%Y-%m-%d') ORDER BY DATE_FORMAT(purchase_time, '%Y-%m-%d'),real_balance";
        $query = $this->db->query($sql,array($query_startdate,  $query_enddate));
        //echo $this->db->last_query();
        return $query->result();
    }

    //purchase
    public function  purchase_card_report_1_1($storeWhere, $query_startdate, $query_enddate){
        $sql = "SELECT DATE_FORMAT(c.purchase_time, '%Y-%m-%d') AS store_date, h.create_date AS purchase_date, c.card_number AS card_number, c.card_id AS card_id, SUM(c.card_balance) AS card_balance, SUM((c.period_start)) AS period_start, sum(c.period_end) AS period_end, sum(c.consume) AS consume, sum(c.card_recharge) AS card_recharge, sum(c.real_balance) AS real_balance,SUM( IF ( c.period_start - c.consume > 0, c.consume, c.period_start )) AS card_amonut1, SUM( c.card_balance - c.period_start ) AS card_amonut2, SUM( IF ( c.period_start - c.consume > 0, c.period_start - c.consume, 0 )) AS card_amonut3, SUM( IF ( c.period_start - c.consume > 0, 0, c.consume - c.period_start )) AS card_amonut4 FROM rm_store_purchase_card c LEFT JOIN bm_cardhistory h ON c.card_id = h.CARDID WHERE c.period_start > 0 AND store_id IN ".$storeWhere." AND DATE_FORMAT(c.purchase_time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(c.purchase_time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY DATE_FORMAT(c.purchase_time, '%Y-%m-%d'), c.card_number, c.card_id, h.create_date ORDER BY DATE_FORMAT(c.purchase_time, '%Y-%m-%d');";
        $query = $this->db->query($sql,array($query_startdate,  $query_enddate));
        //echo $this->db->last_query();
        return $query->result();
    }

    //purchase
    public function  purchase_card_report_2_0($storeWhere, $query_startdate, $query_enddate){
        $sql = "SELECT DATE_FORMAT(purchase_time, '%Y-%m') AS store_date, '--' AS card_number,'--' AS purchase_date,'--' AS card_id, SUM(card_balance) AS card_balance, SUM((period_start)) AS period_start, sum(period_end) AS period_end, sum(consume) AS consume, sum(card_recharge) AS card_recharge, real_balance AS real_balance,SUM( IF ( c.period_start - c.consume > 0, c.consume, c.period_start )) AS card_amonut1, SUM( c.card_balance - c.period_start ) AS card_amonut2, SUM( IF ( c.period_start - c.consume > 0, c.period_start - c.consume, 0 )) AS card_amonut3, SUM( IF ( c.period_start - c.consume > 0, 0, c.consume - c.period_start )) AS card_amonut4 FROM rm_store_purchase_card c  where period_start>0 AND store_id in ".$storeWhere." AND DATE_FORMAT(purchase_time,'%Y-%m-%d')>=DATE_FORMAT(?,'%Y-%m-%d') AND DATE_FORMAT(purchase_time,'%Y-%m-%d')<=DATE_FORMAT(?,'%Y-%m-%d') GROUP BY DATE_FORMAT(purchase_time, '%Y-%m') ORDER BY DATE_FORMAT(purchase_time, '%Y-%m'),real_balance";
        $query = $this->db->query($sql,array($query_startdate,  $query_enddate));
        return $query->result();
    }

    public function  purchase_card_report_2_1($storeWhere, $query_startdate, $query_enddate){
        $sql = "SELECT DATE_FORMAT(c.purchase_time, '%Y-%m') AS store_date, h.create_date AS purchase_date, c.card_number AS card_number, c.card_id AS card_id, SUM(c.card_balance) AS card_balance, SUM((c.period_start)) AS period_start, sum(c.period_end) AS period_end, sum(c.consume) AS consume, sum(c.card_recharge) AS card_recharge, sum(c.real_balance) AS real_balance,SUM( IF ( c.period_start - c.consume > 0, c.consume, c.period_start )) AS card_amonut1, SUM( c.card_balance - c.period_start ) AS card_amonut2, SUM( IF ( c.period_start - c.consume > 0, c.period_start - c.consume, 0 )) AS card_amonut3, SUM( IF ( c.period_start - c.consume > 0, 0, c.consume - c.period_start )) AS card_amonut4 FROM rm_store_purchase_card c LEFT JOIN bm_cardhistory h ON c.card_id = h.CARDID WHERE c.period_start > 0 AND store_id IN ".$storeWhere." AND DATE_FORMAT(c.purchase_time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(c.purchase_time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY DATE_FORMAT(c.purchase_time, '%Y-%m'), c.card_number, c.card_id, h.create_date ORDER BY DATE_FORMAT(c.purchase_time, '%Y-%m');";
        $query = $this->db->query($sql,array($query_startdate,  $query_enddate));
        return $query->result();
    }

    public function  purchase_card_report_3_0($storeWhere, $query_startdate, $query_enddate){
        $sql = "SELECT DATE_FORMAT(purchase_time, '%Y') AS store_date, '--' AS card_number,'--' AS purchase_date,'--' AS card_id, SUM(card_balance) AS card_balance, SUM((period_start)) AS period_start, sum(period_end) AS period_end, sum(consume) AS consume, sum(card_recharge) AS card_recharge, real_balance AS real_balance,SUM( IF ( c.period_start - c.consume > 0,  c.consume, c.period_start )) AS card_amonut1, SUM( c.card_balance - c.period_start ) AS card_amonut2, SUM( IF ( c.period_start - c.consume > 0, c.period_start - c.consume, 0 )) AS card_amonut3, SUM( IF ( c.period_start - c.consume > 0, 0, c.consume - c.period_start )) AS card_amonut4 FROM rm_store_purchase_card c WHERE period_start > 0 AND store_id IN ".$storeWhere." AND DATE_FORMAT(purchase_time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(purchase_time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY DATE_FORMAT(purchase_time, '%Y') ORDER BY DATE_FORMAT(purchase_time, '%Y'),real_balance";
        $query = $this->db->query($sql,array($query_startdate,  $query_enddate));
        return $query->result();
    }

    public function  purchase_card_report_3_1($storeWhere, $query_startdate, $query_enddate){
        $sql = "SELECT DATE_FORMAT(c.purchase_time, '%Y') AS store_date, h.create_date AS purchase_date, c.card_number AS card_number, c.card_id AS card_id, SUM(c.card_balance) AS card_balance, SUM((c.period_start)) AS period_start, sum(c.period_end) AS period_end, sum(c.consume) AS consume, sum(c.card_recharge) AS card_recharge, sum(c.real_balance) AS real_balance,SUM( IF ( c.period_start - c.consume > 0, c.consume, c.period_start )) AS card_amonut1, SUM( c.card_balance - c.period_start ) AS card_amonut2, SUM( IF ( c.period_start - c.consume > 0, c.period_start - c.consume, 0 )) AS card_amonut3, SUM( IF ( c.period_start - c.consume > 0, 0, c.consume - c.period_start )) AS card_amonut4 FROM rm_store_purchase_card c LEFT JOIN bm_cardhistory h ON c.card_id = h.CARDID WHERE c.period_start > 0 AND store_id IN ".$storeWhere." AND DATE_FORMAT(c.purchase_time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(c.purchase_time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY DATE_FORMAT(c.purchase_time, '%Y'), c.card_number, c.card_id, h.create_date ORDER BY DATE_FORMAT(c.purchase_time, '%Y');";
        $query = $this->db->query($sql,array($query_startdate,  $query_enddate));
        return $query->result();
    }
    public function  purchase_card_report_4_0($storeWhere, $query_startdate, $query_enddate){
        $sql = "SELECT store_name AS store_date, '--'  AS purchase_date,'--' AS card_id, card_number AS card_number, SUM(card_balance) AS card_balance, SUM((period_start)) AS period_start, sum(period_end) AS period_end, sum(consume) AS consume, sum(card_recharge) AS card_recharge, real_balance AS real_balance,SUM( IF ( c.period_start - c.consume > 0, c.consume, c.period_start )) AS card_amonut1, SUM( c.card_balance - c.period_start ) AS card_amonut2, SUM( IF ( c.period_start - c.consume > 0, c.period_start - c.consume, 0 )) AS card_amonut3, SUM( IF ( c.period_start - c.consume > 0, 0, c.consume - c.period_start )) AS card_amonut4 FROM rm_store_purchase_card c WHERE period_start > 0 AND store_id IN ".$storeWhere." AND DATE_FORMAT(purchase_time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(purchase_time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY store_name ORDER BY store_name,real_balance";
        $query = $this->db->query($sql,array($query_startdate,  $query_enddate));
        return $query->result();
    }

    public function  purchase_card_report_4_1($storeWhere, $query_startdate, $query_enddate){
        $sql = "SELECT store_name AS store_date,'--'  AS purchase_date,c.card_id  AS card_id,  card_number AS card_number, SUM(card_balance) AS card_balance, SUM((period_start)) AS period_start, sum(period_end) AS period_end, sum(consume) AS consume, sum(card_recharge) AS card_recharge, real_balance AS real_balance,SUM( IF ( c.period_start - c.consume > 0,c.consume, c.period_start )) AS card_amonut1, SUM( c.card_balance - c.period_start ) AS card_amonut2, SUM( IF ( c.period_start - c.consume > 0, c.period_start - c.consume, 0 )) AS card_amonut3, SUM( IF ( c.period_start - c.consume > 0, 0, c.consume - c.period_start )) AS card_amonut4 FROM rm_store_purchase_card c WHERE period_start > 0 AND store_id IN ".$storeWhere." AND DATE_FORMAT(purchase_time, '%Y-%m-%d') >= DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(purchase_time, '%Y-%m-%d') <= DATE_FORMAT(?, '%Y-%m-%d') GROUP BY store_name, card_number,c.card_id  ORDER BY store_name ,real_balance";
        $query = $this->db->query($sql,array($query_startdate,  $query_enddate));
        return $query->result();
    }

    //purchase
    public function  purchase_card_detail_report($card_id, $query_startdate, $query_enddate)
    {
        $sql="SELECT (SELECT STORENAME FROM bm_store where STOREID=p.STOREID LIMIT 0,1) as store_name, o.ORDERID, o.ORDERNUMBER,p.real_amount, p.PRODUCTNAME, p.pay_name, p.server_time FROM bm_orderproducts p LEFT JOIN bm_order o on o.ORDERID = p.ORDERID where o.ORDERID = p.ORDERID and  o.CARDID=? and o.CARDID <>0 and DATE_FORMAT(server_time,'%Y-%m-%d')>=? and DATE_FORMAT(server_time,'%Y-%m-%d')<=? and p.is_delete=0 and p.paystatus=1;";
        $query = $this->db->query($sql,array($card_id, $query_startdate,  $query_enddate));
        //echo $this->db->last_query();
        return $query->result();
    }

    //cross
    public function  period_cross_store_repor_company($storeWhere, $query_startdate, $query_enddate){
        $sql = "SELECT c2.COMPANYNAME as p_date_companyname, p_gcompanyid, p_tcompanyid, c2.COMPANYNAME AS p_gcompanyname, c.COMPANYNAME as p_tcompanyname, sum(p_amount) AS p_amount FROM rm_store_pigeonhole_server_times r LEFT JOIN bm_company c ON r.p_tcompanyid = c.COMPANYID LEFT JOIN bm_store s ON s.STOREID = r.p_tstorid LEFT JOIN bm_company c2 ON r.p_gcompanyid = c2.COMPANYID WHERE p_gstorid IN ".$storeWhere." AND DATE_FORMAT(p_date, '%Y-%m-%d') BETWEEN DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(?, '%Y-%m-%d') GROUP BY p_gcompanyid, p_tcompanyid, c.COMPANYNAME, c2.COMPANYNAME;";
        $sqlWhere = array($query_startdate, $query_enddate);
        $query = $this->db->query($sql,$sqlWhere);
        //echo $this->db->last_query();
        return $query->result();
    }
    public function  period_cross_daily_repor_company($storeWhere, $query_startdate, $query_enddate)
    {
        $sql = "SELECT DATE_FORMAT(p_date, '%Y-%m-%d') AS p_date_companyname, p_gcompanyid, p_tcompanyid, c2.COMPANYNAME AS p_gcompanyname, c.COMPANYNAME  as p_tcompanyname, sum(p_amount) AS p_amount FROM rm_store_pigeonhole_server_times r LEFT JOIN bm_company c ON r.p_tcompanyid = c.COMPANYID LEFT JOIN bm_store s ON s.STOREID = r.p_tstorid LEFT JOIN bm_company c2 ON r.p_gcompanyid = c2.COMPANYID WHERE p_gstorid IN ".$storeWhere."  AND DATE_FORMAT(p_date, '%Y-%m-%d') BETWEEN DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(?, '%Y-%m-%d') GROUP BY p_gcompanyid, p_tcompanyid, c.COMPANYNAME, c2.COMPANYNAME, DATE_FORMAT(p_date, '%Y-%m-%d');";
        $sqlWhere = array($query_startdate, $query_enddate);
        $query = $this->db->query($sql,$sqlWhere);
        //echo $this->db->last_query();
        return $query->result();
    }

    public function  period_cross_daily_repor_company_app($storeWhere, $query_startdate, $query_enddate)
    {
        $sql = "SELECT DATE_FORMAT(p_date, '%Y-%m-%d') AS p_date_companyname, p_gcompanyid, p_tcompanyid, c2.COMPANYNAME AS p_gcompanyname, c.COMPANYNAME  as p_tcompanyname, sum(p_amount) AS p_amount FROM rm_store_pigeonhole_server_times r LEFT JOIN bm_company c ON r.p_tcompanyid = c.COMPANYID LEFT JOIN bm_store s ON s.STOREID = r.p_tstorid LEFT JOIN bm_company c2 ON r.p_gcompanyid = c2.COMPANYID WHERE p_gstorid IN ".$storeWhere."  AND DATE_FORMAT(p_date, '%Y-%m-%d') BETWEEN DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(?, '%Y-%m-%d') AND p_tcompanyid <> p_gcompanyid GROUP BY p_gcompanyid, p_tcompanyid, c.COMPANYNAME, c2.COMPANYNAME, DATE_FORMAT(p_date, '%Y-%m-%d');";
        $sqlWhere = array($query_startdate, $query_enddate);
        $query = $this->db->query($sql,$sqlWhere);
        //echo $this->db->last_query();
        return $query->result();
    }

    //cross
    public function  period_cross_store_repor_store($storeWhere,$s_company,$e_company, $query_startdate, $query_enddate)
    {
        $sql="SELECT p_gstorid, p_gstorname, p_gcompanyid, p_tstorid, p_tstorname, p_tcompanyid, c2.COMPANYNAME AS p_gcompanyname, IFNULL(s.STORESHORTNUM, 0) AS STORESHORTNUM, c.COMPANYNAME AS p_tcompanyname, DATE_FORMAT(p_date, '%Y-%m-%d') AS p_date, sum(p_amount) AS p_amount FROM rm_store_pigeonhole_server_times r LEFT JOIN bm_company c ON r.p_tcompanyid = c.COMPANYID LEFT JOIN bm_store s ON s.STOREID = r.p_tstorid LEFT JOIN bm_company c2 ON r.p_gcompanyid = c2.COMPANYID WHERE p_gstorid IN ".$storeWhere." AND DATE_FORMAT(p_date, '%Y-%m-%d') BETWEEN DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(?, '%Y-%m-%d') AND p_gcompanyid =? AND p_tcompanyid =? GROUP BY p_gstorid, p_gstorname, p_gcompanyid, p_tstorid, p_tstorname, p_tcompanyid, c.COMPANYNAME, s.STORESHORTNUM, DATE_FORMAT(p_date, '%Y-%m-%d');";
        $sqlWhere = array($query_startdate, $query_enddate, $s_company, $e_company);
        $query = $this->db->query($sql,$sqlWhere);
        //echo $this->db->last_query();
        return $query->result();
    }

    //cross
    public function  period_cross_store_repor_card($storeWhere,$table_store_id, $query_startdate, $query_enddate)
    {
        $sql = "SELECT p_gstorid, p_gstorname, p_gcompanyid, p_cardid, p_cardnum, p_tstorid, p_tstorname, p_tcompanyid, s.STORESHORTNUM, c.COMPANYNAME, DATE_FORMAT(p_date, '%Y-%m-%d') AS p_date, sum(p_amount) AS p_amount FROM rm_store_pigeonhole_server_times r LEFT JOIN bm_company c ON r.p_tcompanyid = c.COMPANYID LEFT JOIN bm_store s ON s.STOREID = r.p_tstorid WHERE p_gstorid in ".$storeWhere." AND DATE_FORMAT(p_date, '%Y-%m-%d') BETWEEN DATE_FORMAT(?, '%Y-%m-%d') AND DATE_FORMAT(?, '%Y-%m-%d') AND p_tstorid = ? GROUP BY p_gstorid, p_gstorname, p_gcompanyid, p_cardid, p_cardnum, p_tstorid, p_tstorname, p_tcompanyid, c.COMPANYNAME, s.STORESHORTNUM, DATE_FORMAT(p_date, '%Y-%m-%d');";
        $sqlWhere = array($query_startdate, $query_enddate,$table_store_id);

        $query = $this->db->query($sql,$sqlWhere);
        //echo $this->db->last_query();
        return $query->result();
    }
}
?>